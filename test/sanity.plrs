import core/io

type UnitType
type MyResult(a) = Result(a, String)
type MySumType {
    A(Int)
    B(s: String, m: Bool)
    C
}

pub harness fn main() {
    let z = x + -y

    let func = fn(a: Int, b: String) -> Bool {
        if a > 0 {
            True
        } else {
            False
        }
    }

    let t: nocrypt Int = 10


    let #(ret, _) = match True {
        True -> #(io.println("It's true!"), 0),
        False -> #(io.println("It's false!"), 1),
    }

    ret
}


const x: #(Int, String) =  #(5, "Hello")
